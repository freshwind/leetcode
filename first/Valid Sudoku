class Solution {
public:
    bool isValidSudoku(vector<vector<char> > &board) {
        int N = board.size();
        int check[10];
        //check row
        for (int row = 0; row < N; row++) {
            for (int i = 1; i <= N; i++) {
                check[i] = 0;
            }
            for (int column = 0; column < N; column++) {
                if (board[row][column] != '.' && ++check[board[row][column] - '0'] > 1) {
                     return false;
                }
            }
        }
        //check column
        for (int column = 0; column < N; column++) {
            for (int i = 1; i <= N; i++) {
                check[i] = 0;
            }
            for (int row = 0; row < N; row++) {
                if (board[row][column] != '.' && ++check[board[row][column] - '0'] > 1) {
                     return false;
                }
            }
        }
        //check grid
        for (int g_r = 0; g_r < N/3; g_r++) {
            for (int g_c = 0; g_c < N/3; g_c++) {
                for (int i = 1; i <= N; i++) {
                    check[i] = 0;
                }
                for (int row = 0; row < N/3; row++) {
                    for (int column = 0; column < N/3; column++) {
                        if (board[g_r*3 + row][g_c*3 + column] != '.' && ++check[board[g_r*3 + row][g_c*3 + column] - '0'] > 1) {
                            return false;
                        }
                    }
                }
            }
        }
        return true;
    }
};
